// music consts
#define VOL 3
#define D_FLAT 277
#define E_FLAT 311
#define E 330
#define F 349
#define A_FLAT 415
#define B_FLAT 466
#define C_5 523
#define TRIPLET_NOTE_DURATION 150
#define TRIPLET_DURATION 167
#define QUARTER_NOTE_DURATION 400
#define QUARTER_DURATION 500

// real consts
#define WHEEL_L    OUT_A
#define WHEEL_R    OUT_C
#define WHEELS     OUT_AC

#define SONAR_THRESHOLD  80 // in centimeters

// global vars
mutex move_mutex;

task ff7()
{
//  Wait(4000);
//  while (true)
//  {
    PlayToneEx(E,TRIPLET_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,TRIPLET_NOTE_DURATION,VOL,FALSE);
    Wait(TRIPLET_DURATION);

    PlayToneEx(E,TRIPLET_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,TRIPLET_NOTE_DURATION,VOL,FALSE);
    Wait(TRIPLET_DURATION);
  
    PlayToneEx(E,TRIPLET_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,TRIPLET_NOTE_DURATION,VOL,FALSE);
    Wait(TRIPLET_DURATION);
  
    PlayToneEx(E,QUARTER_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,QUARTER_NOTE_DURATION,VOL,FALSE);
    Wait(QUARTER_DURATION);
  
    PlayToneEx(D_FLAT,QUARTER_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(A_FLAT,QUARTER_NOTE_DURATION,VOL,FALSE);
    Wait(QUARTER_DURATION);
  
    PlayToneEx(B_FLAT,QUARTER_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(E_FLAT,QUARTER_NOTE_DURATION,VOL,FALSE);
    Wait(QUARTER_DURATION);
  
    PlayToneEx(F,TRIPLET_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,TRIPLET_NOTE_DURATION,VOL,FALSE);
    Wait(TRIPLET_DURATION);
  
    Wait(TRIPLET_DURATION);
  
    PlayToneEx(B_FLAT,TRIPLET_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(E_FLAT,TRIPLET_NOTE_DURATION,VOL,FALSE);
    Wait(TRIPLET_DURATION);
  
    PlayToneEx(F,3*QUARTER_NOTE_DURATION,VOL,FALSE);
    PlayToneEx(C_5,3*QUARTER_NOTE_DURATION,VOL,FALSE);
    Wait(3*QUARTER_DURATION);
//  }
}

// go straight for 1/4 second
sub fullSpeedAhead()
{
  OnFwd(WHEELS, 100);
  Wait(250);
}

// go backwards for 1/4 second
sub fullSpeedBackward()
{
  OnRev(WHEELS, 100);
  Wait(250);
}

// spin in place for 1/4 second
sub spinRightABit()
{
  OnFwd(WHEEL_R, 100);
  OnRev(WHEEL_L, 100);
  Wait(250);
}

// move forward full speed
sub sumo()
{
  while (true) {
    while (SENSOR_1 == 1)
    {
      // somone got behind us and is pushing us.  FIGHT BACK
      fullSpeedBackward();
    }
    while (SensorUS(IN_4) > SONAR_THRESHOLD)
    {
      // if we are not directly in front of opponent
      spinRightABit();
    }
    fullSpeedAhead();
  }
}

task turnAround()
{
  OnFwd(WHEEL_L, 100);
  OnRev(WHEEL_R, 100);
  Wait(1700);
  sumo();
}

task main()
{
  Precedes(turnAround);
  // Set any sensors here
  SetSensorLowspeed(IN_4);
  SetSensorTouch(IN_1);
}
